(exec
	'(defun ,sexp ,L
		'(if (!= (next L) "(")
			'(error "Invalid sexp")
			'(exec
				'(define ,Opt (next L))
				'(define ,Oprd0 (next L))
				'(if (= Oprd0 "(")
					'(exec
						'(prev L)
						'(set ,Oprd0 (sexp L))
					)
				)
				'(define ,Oprd1 (next L))
				'(if (= Oprd1 "(")
					'(exec
						'(prev L)
						'(set ,Oprd1 (sexp L))
					)
				)
				'(define ,Result 0)
				'(if (= Opt "+")
					'(set ,Result (+ (float Oprd0) (float Oprd1)))
					'(if (= Opt "-")
						'(set ,Result (- (float Oprd0) (float Oprd1)))
						'(error "Invalid sexp")
					)
				)
				'(if (!= (next L) ")")
					'(error "Invalid sexp")
				)
				'(v Result)
			)
		)
	)
	'(print (sexp '(+ (+ 1 2) (+ 2 (- 10 5)))) "\n")
)
